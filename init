#!/bin/bash
#载入配置
. ./config
#配置ansible
echo -e '\033[32m ---------------------[系统初始化中...] \033[0m'
yum install -y ansible > /dev/null
#关闭ansible ssh交互 关闭ansible回显 关闭ansible Warning
sed -i 's/#host_key_checking = False/host_key_checking = False/' /etc/ansible/ansible.cfg
sed -i 's/#bin_ansible_callbacks = False/bin_ansible_callbacks = False/' /etc/ansible/ansible.cfg
sed -i 's/# command_warnings = False/command_warnings = False/' /etc/ansible/ansible.cfg

cat >> /etc/ansible/hosts << EOF
[etcd]
${HOST0} ansible_ssh_user=${u} ansible_ssh_pass=${s}
${HOST1} ansible_ssh_user=${u} ansible_ssh_pass=${s}
${HOST2} ansible_ssh_user=${u} ansible_ssh_pass=${s}
EOF
#配置主机名
ansible ${HOST0} -m shell -a "hostnamectl set-hostname ${n1}" > /dev/null
ansible ${HOST1} -m shell -a "hostnamectl set-hostname ${n2}" > /dev/null
ansible ${HOST2} -m shell -a "hostnamectl set-hostname ${n3}" > /dev/null


#安装docker
ansible etcd -m shell -a 'yum install -y yum-utils && mkdir -p /etc/docker/' > /dev/null
ansible etcd -m shell -a 'yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo' > /dev/null
ansible etcd -m shell -a 'yum install -y docker-ce-18.06.3.ce-3.el7' > /dev/null
cat >> /etc/docker/daemon.json << EOF
{
    "log-driver": "json-file",
    "exec-opts": ["native.cgroupdriver=systemd"],
    "log-opts": {
    "max-size": "100m",
    "max-file": "3"
    },
    "live-restore": true,
    "max-concurrent-downloads": 10,
    "max-concurrent-uploads": 10,
    "registry-mirrors": ["https://2lefsjdg.mirror.aliyuncs.com"],
    "storage-driver": "overlay2",
    "storage-opts": [
    "overlay2.override_kernel_check=true"
    ]
}
EOF
ansible etcd -m copy -a 'src=/etc/docker/daemon.json dest=/etc/docker/daemon.json' > /dev/null
ansible etcd -m shell -a 'systemctl daemon-reload && systemctl restart docker' > /dev/null
#安装k8s组件
cat << EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.co
EOF
ansible etcd -m copy -a 'src=/etc/yum.repos.d/kubernetes.repo dest=/etc/yum.repos.d/kubernetes.repo' > /dev/null
ansible etcd -m shell -a 'yum install -y kubelet kubeadm kubectl' > /dev/null
#ansible etcd -m yum -a 'name=kubelet state=latest'
#ansible etcd -m yum -a 'name=kubeadm state=latest'
#ansible etcd -m yum -a 'name=kubectl state=latest'
# ipvsadm安装
ansible etcd -m yum -a 'name=ipvsadm state=latest' > /dev/null

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
ansible etcd -m copy -a 'src=/etc/sysctl.d/k8s.conf dest=/etc/sysctl.d/k8s.conf' > /dev/null

cat <<EOF > /tmp/init-t.sh
setenforce  0
sed -i 's/SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config 
systemctl stop firewalld
systemctl disable firewalld
swapoff -a
# Open ipvs
modprobe -- ip_vs
modprobe -- ip_vs_rr
modprobe -- ip_vs_wrr
modprobe -- ip_vs_sh
modprobe -- nf_conntrack_ipv4
sysctl --system
sysctl -w net.ipv4.ip_forward=1
systemctl stop firewalld && systemctl disable firewalld
EOF
ansible etcd -m copy -a 'src=/tmp/init-t.sh dest=/tmp/init-t.sh' > /dev/null
ansible etcd -m shell -a 'sh /tmp/init-t.sh' > /dev/null
ansible etcd -m shell -a 'rm -rf /tmp/init-t.sh' > /dev/null
ansible etcd -m shell -a 'systemctl enable docker.service && systemctl enable kubelet.service' > /dev/null
echo -e '\033[36m ---------------------[系统初始化完成] \033[0m'
